{"version":3,"sources":["components/DanhSachVanBan/ChiTietBaiViet/LuuData/ShowDataNow.js","components/DanhSachVanBan/ChiTietBaiViet/LuuData/CacDataLienQUan.js","components/DanhSachVanBan/ChiTietBaiViet/LuuData/NewDeltal.js"],"names":["ShowDataNow","props","state","datapdf","fetch","method","headers","body","JSON","stringify","html","this","vanbans","inlinePdf","fileName","then","res","json","setState","pdf","e","font","size","lines","doc","jsPDF","sizes","fonts","margin","verticalOffset","i","setDrawColor","setLineWidth","line","hasOwnProperty","setFont","setFontSize","splitTextToSize","text","length","save","className","src","hinhanh","alt","slice","hashtag","style","paddingLeft","onClick","convertHtmlToPdf","bind","height","width","controls","amthanh","type","rows","cols","value","defaultValue","class","allowfullscreen","title","Component","CacDataLienQUan","to_slug","str","toLowerCase","replace","to","stt","hastag","NewDeltal","showcascbaiviet","data","map","key","ShowData","Object","entries","match","params","id","toString","firebasetwo","on","datas","Mang","forEach","element","val","push"],"mappings":"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","file":"static/js/17.e7fc724f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport jsPDF from 'jspdf';\r\nclass ShowDataNow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      datapdf: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://v2018.api2pdf.com/chrome/html', {\r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': '10afa838-b749-45fb-a3b2-07a56d0b171c' //Get your API key from\r\n      },\r\n      body: JSON.stringify({ html: this.props.vanbans, inlinePdf: true, fileName: 'test.pdf' })\r\n    })\r\n      .then(res => res.json())\r\n      .then((res) => {\r\n        this.setState({ datapdf: res.pdf })\r\n      });\r\n  }\r\n\r\n  convertHtmlToPdf(e) {\r\n    var doc = new jsPDF('p', 'in', 'letter'),\r\n      sizes = [\r\n        12, 16, 20\r\n      ],\r\n      fonts = [\r\n        ['Times', 'Roman']\r\n      ],\r\n      font,\r\n      size,\r\n      lines,\r\n      margin = 0.5, // inches on a 8.5 x 11 inch sheet.\r\n      verticalOffset = margin,\r\n      loremipsum = 'Sorry system update'\r\n\r\n    // Margins:\r\n    doc\r\n      .setDrawColor(0, 255, 0)\r\n      .setLineWidth(1 / 72)\r\n      .line(margin, margin, margin, 11 - margin)\r\n      .line(8.5 - margin, margin, 8.5 - margin, 11 - margin)\r\n\r\n    // the 3 blocks of text\r\n    for (var i in fonts) {\r\n      if (fonts.hasOwnProperty(i)) {\r\n        font = fonts[i]\r\n        size = sizes[i]\r\n\r\n        lines = doc.setFont(font[0], font[1])\r\n          .setFontSize(size)\r\n          .splitTextToSize(loremipsum, 7.5)\r\n        // Don't want to preset font, size to calculate the lines?\r\n        // .splitTextToSize(text, maxsize, options) allows you to pass an object with\r\n        // any of the following: { \t'fontSize': 12 \t, 'fontStyle': 'Italic' \t,\r\n        // 'fontName': 'Times' } Without these, .splitTextToSize will use current /\r\n        // default font Family, Style, Size.\r\n        doc.text(0.5, verticalOffset + size / 72, lines)\r\n\r\n        verticalOffset += (lines.length + 0.5) * size / 72\r\n      }\r\n    }\r\n    doc.save('a4.pdf')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h1 className=\"my-4\">Save text\r\n                    <small>Save audio</small>\r\n        </h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <img className=\"img-fluid komask\" src={this.props.hinhanh} alt=\"demo\" />\r\n          </div>\r\n\r\n          <div className=\"col-md-4 size_text_one\">\r\n            <h3 className=\"my-3 \">Mô tả tải liệu</h3>\r\n            <p>{this\r\n              .props\r\n              .vanbans\r\n              .slice(0, 300) + \"...\"}</p>\r\n            <h3 className=\"my-3\">Thẻ gợi từ</h3>\r\n            <ul>\r\n              <i>{this.props.hashtag}</i>\r\n            </ul>\r\n            <h3>Dowload file text</h3>\r\n            <ul\r\n              className=\"padding_left\"\r\n              style={{\r\n                paddingLeft: '0px'\r\n              }}>\r\n              <img\r\n                onClick={this\r\n                  .convertHtmlToPdf\r\n                  .bind(this)}\r\n                src=\"https://cdn1.iconfinder.com/data/icons/adobe-acrobat-pdf/154/adobe-acrobat-pdf-file-512.png\"\r\n                className=\"size_image\"\r\n                alt=\"demo\" />\r\n            </ul>\r\n            <h3>Length Text</h3>\r\n            <span>{this.props.vanbans.length}</span>\r\n            <h3>Audio Language</h3>\r\n            <video\r\n              className=\"deme\"\r\n              style={{\r\n                height: '50px',\r\n                width: '310px'\r\n              }}\r\n              controls>\r\n              <source src={this.props.amthanh} type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n        </div>\r\n\r\n        <h3 className=\"my-4\">Văn bản được hệ thống nhận</h3>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                className=\"form-control size\"\r\n                rows=\"7\"\r\n                cols=\"20\"\r\n                value={this.props.vanbans}\r\n                defaultValue='...loading'>\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3 className=\"my-4\">Convet text to PDF</h3>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div class=\"embed-responsive embed-responsive-16by9\">\r\n              <iframe\r\n                class=\"embed-responsive-item\"\r\n                src={this.state.datapdf}\r\n                allowfullscreen\r\n                title=\"sd\"></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowDataNow;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nclass CacDataLienQUan extends Component {\r\n\r\n  to_slug = (str) => {\r\n    // Chuyển hết sang chữ thường\r\n    str = str.toLowerCase();\r\n\r\n    // xóa dấu\r\n    str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\r\n    str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\r\n    str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\r\n    str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\r\n    str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\r\n    str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\r\n    str = str.replace(/(đ)/g, 'd');\r\n\r\n    // Xóa ký tự đặc biệt\r\n    str = str.replace(/([^0-9a-z-\\s])/g, '');\r\n\r\n    // Xóa khoảng trắng thay bằng ký tự -\r\n    str = str.replace(/(\\s+)/g, '-');\r\n\r\n    // xóa phần dự - ở đầu\r\n    str = str.replace(/^-+/g, '');\r\n\r\n    // xóa phần dư - ở cuối\r\n    str = str.replace(/-+$/g, '');\r\n\r\n    // return\r\n    return str;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-3 col-sm-6 mb-3 mt-4\">\r\n        <div className=\"card cardtextama\">\r\n          <div className=\"card-body\">\r\n            <Link\r\n              to={\"/chi-tiet-tai-lieu/\" + this.to_slug(this.props.vanbans) + \".\" + this.props.stt + \".html\"}><img className=\"resize\" src={this.props.hinhanh} alt=\"dem\" /></Link>\r\n            <blockquote className=\"blockquote\">\r\n              <p>{this\r\n                .props\r\n                .vanbans\r\n                .slice(0, 40) + \"...\"}</p>\r\n              <footer className=\"card-blockquote hehe\">\r\n                <cite title=\"Source title\">{this.props.hastag}</cite>\r\n              </footer>\r\n            </blockquote>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CacDataLienQUan;","import React, { Component } from 'react';\r\nimport { firebasetwo } from '../../../../Firebase/firebaseconnectio';\r\nimport ShowDataNow from '../LuuData/ShowDataNow';\r\nimport CacDataLienQUan from '../LuuData/CacDataLienQUan';\r\nclass NewDeltal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    firebasetwo.on('value', (datas) => {\r\n      var Mang = [];\r\n      datas.forEach(element => {\r\n        const key = element.key;\r\n        const amthanh = element\r\n          .val()\r\n          .amthanh;\r\n        const hashtag = element\r\n          .val()\r\n          .hashtag;\r\n        const hinhanh = element\r\n          .val()\r\n          .hinhanh;\r\n        const vanbans = element\r\n          .val()\r\n          .vanbans;\r\n        Mang.push({ key: key, amthanh: amthanh, hashtag: hashtag, hinhanh: hinhanh, vanbans: vanbans })\r\n      });\r\n      this.setState({ data: Mang });\r\n    })\r\n  }\r\n\r\n\r\n  showcascbaiviet = () => {\r\n    if (this.state.data) {\r\n      return this\r\n        .state\r\n        .data\r\n        .map((value, key) => {\r\n          if (key < 8) {\r\n            return <CacDataLienQUan\r\n              key={key}\r\n              amthanh={value.amthanh}\r\n              hashtag={value.hashtag}\r\n              stt={key}\r\n              hinhanh={value.hinhanh}\r\n              vanbans={value.vanbans} />\r\n          }\r\n          return 0;\r\n        })\r\n    }\r\n  }\r\n\r\n  ShowData = () => {\r\n    if (this.state.data) {\r\n      for (const [key,\r\n        value] of Object.entries(this.state.data)) {\r\n        if (this.props.match.params.id === key.toString()) {\r\n          return (<ShowDataNow\r\n            amthanh={value.amthanh}\r\n            hashtag={value.hashtag}\r\n            hinhanh={value.hinhanh}\r\n            vanbans={value.vanbans} />)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.ShowData()}\r\n        <h3 className=\"my-4\">Các tài liệu liên quan</h3>\r\n        <div className=\"row\">\r\n          {this.showcascbaiviet()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDeltal;"],"sourceRoot":""}