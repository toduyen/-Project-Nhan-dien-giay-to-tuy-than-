{"version":3,"sources":["components/DanhSachVanBan/ChiTietBaiViet/LuuData/ShowDataNow.js","components/DanhSachVanBan/ChiTietBaiViet/LuuData/CacDataLienQUan.js","components/DanhSachVanBan/ChiTietBaiViet/LuuData/NewDeltal.js"],"names":["ShowDataNow","props","state","datapdf","fetch","method","headers","body","JSON","stringify","html","this","vanbans","inlinePdf","fileName","then","res","json","setState","pdf","e","font","size","lines","doc","jsPDF","sizes","fonts","margin","verticalOffset","i","setDrawColor","setLineWidth","line","hasOwnProperty","setFont","setFontSize","splitTextToSize","text","length","save","className","src","hinhanh","alt","slice","hashtag","style","paddingLeft","onClick","convertHtmlToPdf","bind","height","width","controls","amthanh","type","rows","cols","value","defaultValue","class","allowfullscreen","title","Component","CacDataLienQUan","to_slug","str","toLowerCase","replace","to","stt","hastag","NewDeltal","showcascbaiviet","data","map","key","ShowData","Object","entries","match","params","id","toString","firebasetwo","on","datas","Mang","forEach","element","val","push"],"mappings":"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","file":"static/js/17.92e5f71b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport jsPDF from 'jspdf';\nclass ShowDataNow extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            datapdf: ''\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://v2018.api2pdf.com/chrome/html', {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': '10afa838-b749-45fb-a3b2-07a56d0b171c' //Get your API key from\n            },\n                body: JSON.stringify({html: this.props.vanbans, inlinePdf: true, fileName: 'test.pdf'})\n            })\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({datapdf: res.pdf})\n            });\n    }\n\n    convertHtmlToPdf(e) {\n        var doc = new jsPDF('p', 'in', 'letter'),\n            sizes = [\n                12, 16, 20\n            ],\n            fonts = [\n                ['Times', 'Roman']\n            ],\n            font,\n            size,\n            lines,\n            margin = 0.5, // inches on a 8.5 x 11 inch sheet.\n            verticalOffset = margin,\n            loremipsum = 'Sorry system update'\n\n        // Margins:\n        doc\n            .setDrawColor(0, 255, 0)\n            .setLineWidth(1 / 72)\n            .line(margin, margin, margin, 11 - margin)\n            .line(8.5 - margin, margin, 8.5 - margin, 11 - margin)\n\n        // the 3 blocks of text\n        for (var i in fonts) {\n            if (fonts.hasOwnProperty(i)) {\n                font = fonts[i]\n                size = sizes[i]\n\n                lines = doc.setFont(font[0], font[1])\n                    .setFontSize(size)\n                    .splitTextToSize(loremipsum, 7.5)\n                // Don't want to preset font, size to calculate the lines?\n                // .splitTextToSize(text, maxsize, options) allows you to pass an object with\n                // any of the following: { \t'fontSize': 12 \t, 'fontStyle': 'Italic' \t,\n                // 'fontName': 'Times' } Without these, .splitTextToSize will use current /\n                // default font Family, Style, Size.\n                doc.text(0.5, verticalOffset + size / 72, lines)\n\n                verticalOffset += (lines.length + 0.5) * size / 72\n            }\n        }\n        doc.save('a4.pdf')\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <h1 className=\"my-4\">Save text\n                    <small>Save audio</small>\n                </h1>\n                <div className=\"row\">\n                    <div className=\"col-md-8\">\n                        <img className=\"img-fluid komask\" src={this.props.hinhanh} alt=\"demo\"/>\n                    </div>\n\n                    <div className=\"col-md-4 size_text_one\">\n                        <h3 className=\"my-3 \">Mô tả tải liệu</h3>\n                        <p>{this\n                                .props\n                                .vanbans\n                                .slice(0, 300) + \"...\"}</p>\n                        <h3 className=\"my-3\">Thẻ gợi từ</h3>\n                        <ul>\n                            <i>{this.props.hashtag}</i>\n                        </ul>\n                        <h3>Dowload file text</h3>\n                        <ul\n                            className=\"padding_left\"\n                            style={{\n                            paddingLeft: '0px'\n                        }}>\n                            <img\n                                onClick={this\n                                .convertHtmlToPdf\n                                .bind(this)}\n                                src=\"https://cdn1.iconfinder.com/data/icons/adobe-acrobat-pdf/154/adobe-acrobat-pdf-file-512.png\"\n                                className=\"size_image\"\n                                alt=\"demo\"/>\n                        </ul>\n                        <h3>Length Text</h3>\n                        <span>{this.props.vanbans.length}</span>\n                        <h3>Audio Language</h3>\n                        <video\n                            className=\"deme\"\n                            style={{\n                            height: '50px',\n                            width: '310px'\n                        }}\n                            controls>\n                            <source src={this.props.amthanh} type=\"video/mp4\"/>\n                        </video>\n                    </div>\n                </div>\n\n                <h3 className=\"my-4\">Văn bản được hệ thống nhận</h3>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"form-group\">\n                            <textarea\n                                className=\"form-control size\"\n                                rows=\"7\"\n                                cols=\"20\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.props.vanbans}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue='...loading'>\n                            </textarea>\n                        </div>\n                    </div>\n                </div>\n\n                <h3 className=\"my-4\">Convet text to PDF</h3>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div class=\"embed-responsive embed-responsive-16by9\">\n                            <iframe\n                                class=\"embed-responsive-item\"\n                                src={this.state.datapdf}\n                                allowfullscreen\n                                title=\"sd\"></iframe>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ShowDataNow;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nclass CacDataLienQUan extends Component {\n\n    to_slug = (str) => {\n        // Chuyển hết sang chữ thường\n        str = str.toLowerCase();\n\n        // xóa dấu\n        str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\n        str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\n        str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\n        str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\n        str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\n        str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\n        str = str.replace(/(đ)/g, 'd');\n\n        // Xóa ký tự đặc biệt\n        str = str.replace(/([^0-9a-z-\\s])/g, '');\n\n        // Xóa khoảng trắng thay bằng ký tự -\n        str = str.replace(/(\\s+)/g, '-');\n\n        // xóa phần dự - ở đầu\n        str = str.replace(/^-+/g, '');\n\n        // xóa phần dư - ở cuối\n        str = str.replace(/-+$/g, '');\n\n        // return\n        return str;\n    }\n    render() {\n        return (\n            <div className=\"col-md-3 col-sm-6 mb-3 mt-4\">\n                <div className=\"card cardtextama\">\n                    <div className=\"card-body\">\n                        <Link\n                            to={\"/chi-tiet-tai-lieu/\" + this.to_slug(this.props.vanbans) + \".\" + this.props.stt + \".html\"}><img className=\"resize\" src={this.props.hinhanh} alt=\"dem\"/></Link>\n                        <blockquote className=\"blockquote\">\n                            <p>{this\n                                    .props\n                                    .vanbans\n                                    .slice(0, 40) + \"...\"}</p>\n                            <footer className=\"card-blockquote hehe\">\n                                <cite title=\"Source title\">{this.props.hastag}</cite>\n                            </footer>\n                        </blockquote>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CacDataLienQUan;","import React, {Component} from 'react';\nimport {firebasetwo} from '../../../../Firebase/firebaseconnectio';\nimport ShowDataNow from '../LuuData/ShowDataNow';\nimport CacDataLienQUan from '../LuuData/CacDataLienQUan';\nclass NewDeltal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        };\n    }\n   componentDidMount() {\n\t\tfirebasetwo.on('value', (datas) => {\n\t\t\tvar Mang = [];\n\t\t\tdatas.forEach(element => {\n\t\t\t\t\tconst key = element.key;\n\t\t\t\t\tconst amthanh = element\n\t\t\t\t\t\t\t.val()\n\t\t\t\t\t\t\t.amthanh;\n\t\t\t\t\tconst hashtag = element\n\t\t\t\t\t\t\t.val()\n\t\t\t\t\t\t\t.hashtag;\n\t\t\t\t\tconst hinhanh = element\n\t\t\t\t\t\t\t.val()\n\t\t\t\t\t\t\t.hinhanh;\n\t\t\t\t\tconst vanbans = element\n\t\t\t\t\t\t\t.val()\n\t\t\t\t\t\t\t.vanbans;\n\t\t\t\t\tMang.push({key: key, amthanh: amthanh, hashtag: hashtag, hinhanh: hinhanh, vanbans: vanbans})\n\t\t\t});\n\t\t\tthis.setState({data: Mang});\n\t})\n\t }\n\t \n\n    showcascbaiviet = () => {\n        if (this.state.data) {\n            return this\n                .state\n                .data\n                .map((value, key) => {\n                    if (key < 8) {\n                        return <CacDataLienQUan\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\n                            amthanh={value.amthanh}\n                            hashtag={value.hashtag}\n                            stt={key}\n                            hinhanh={value.hinhanh}\n                            vanbans={value.vanbans}/>\n                    }\n                    return 0;\n                })\n        }\n    }\n\n    ShowData = () => {\n        if (this.state.data) {\n            for (const [key,\n                value]of Object.entries(this.state.data)) {\n                if (this.props.match.params.id === key.toString()) {\n                    return (<ShowDataNow\n                        amthanh={value.amthanh}\n                        hashtag={value.hashtag}\n                        hinhanh={value.hinhanh}\n                        vanbans={value.vanbans}/>)\n                }\n            }\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.ShowData()}\n                <h3 className=\"my-4\">Các tài liệu liên quan</h3>\n                <div className=\"row\">\n                    {this.showcascbaiviet()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NewDeltal;"],"sourceRoot":""}